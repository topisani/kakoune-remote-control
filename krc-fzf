#!/bin/bash

# Automatic FZF preview position based on aspect ratio
read -r LINES COLUMNS < <(stty size < /dev/tty)
if (( LINES > COLUMNS / 2 )); then
  FZF_PREVIEW_OPTS="--preview-window=up"
else
  FZF_PREVIEW_OPTS="--preview-window=right"
fi

krc_fzf_files() {
  fd --type file . "$@" |
  fzf --header='Select a file to open' --prompt='(f)>' $FZF_PREVIEW_OPTS --preview="bat --color=always -p {}" |
  # Open files
  while read file; do
    krc edit "$file"
  done
}

krc_fzf__buffers_preview() {
  bufname=$1
  export PREVIEW_PATH=$(mktemp)
  trap 'rm "$PREVIEW_PATH"' EXIT

  echo "eval -draft %{
    buffer '$bufname'
    write -force '$PREVIEW_PATH'
  }" | krc raw-send-sync

  bat --color=always -p "$PREVIEW_PATH"
}

krc_fzf_buffers() {
  krc get %val[buflist] |
  grep -F "$*" |
  fzf --header='Select a buffer to open' --prompt='(b)>' $FZF_PREVIEW_OPTS --preview="$0 _buffers_preview {}"|
  # Open buffers
  while read name; do
    krc send buffer "$name"
  done
}

krc_fzf_grep() {
  export PATHS_PATH=$(mktemp)
  trap 'rm "$PATHS_PATH"' EXIT
  for path do
    echo "$path" >> "$PATHS_PATH"
  done

  fzf --phony --delimiter ':' --ansi --bind 'change:reload(while read path; do set -- "$@" "$path"; done < "$PATHS_PATH"; rg --color=always --column --with-filename --fixed-strings -- {q} "$@" || true),enter:execute(krc edit {1} {2} {3})+abort' --preview 'highlight_line={2} line_range_begin=$((line = highlight_line - (FZF_PREVIEW_LINES / 4) && line < 1 ? 1 : line)) line_range_end=$((line_range_begin + FZF_PREVIEW_LINES)) && bat --style=numbers --color=always --line-range "$line_range_begin:$line_range_end" --highlight-line {2} {1} 2> /dev/null' --header='Select a file to open' --prompt='(g)>'
}

krc_fzf_menu() {
  i=0
  cmds=( )
  labels=( )
  i_width=$(echo -n "$#" | wc -c)
  while [[ "$#" -gt "0" ]]; do
    label=$(printf "%${i_width}d: %s" "$i" "$1"); shift
    labels+=( "$label" )
    cmds+=( "$1" ); shift
    i=$(( i + 1 ))
  done
  
  selected=$(for label in "${labels[@]}"; do echo "$label"; done | fzf | cut -d: -f1)
  [[ -n "$selected" ]] || return 0
  echo ${cmds[$selected]} | krc raw-send
}

krc_fzf_jump() {
  selected=$(fzf --header="Jump" --prompt=">")
  IFS=':' read -r -a array <<< "$selected"
  file=${array[0]}
  line=${array[1]}
  char=${array[2]}
  echo "evaluate-commands -try-client %opt{jumpclient} -verbatim -- edit -existing -- '$file' $line $char" | krc raw-send
  echo "try %{ focus %opt{jumpclient} }" | krc raw-send
}

"krc_fzf_$@"
